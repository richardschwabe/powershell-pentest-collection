# Define file paths
$inputFilePath = "target_ips.txt"
$outputFilePath = "nfs_shares_results.txt"

# Function to check NFS shares for a given target IP
function CheckNfsShares($targetIp, $username, $password) {
    try {
        # Create a credential object
        $credential = New-Object System.Management.Automation.PSCredential -ArgumentList @($username, (ConvertTo-SecureString $password -AsPlainText -Force))

        # Attempt to access NFS shares with provided credentials
        $nfsShares = Get-WmiObject -Class Win32_NetworkConnection -Filter "RemoteName='\\\\$targetIp\\' AND ProviderType=8192" -Credential $credential -ErrorAction Stop

        if ($nfsShares) {
            Write-Host "NFS shares on $targetIp (using provided credentials):"
            foreach ($share in $nfsShares) {
                Write-Host "   - $($share.LocalName)"
                Add-Content -Path $outputFilePath -Value "{$targetIp}: $($share.LocalName) (using provided credentials)"
            }
        }
        else {
            Write-Host "No NFS shares found on $targetIp with provided credentials."
            Add-Content -Path $outputFilePath -Value "No NFS shares found on $targetIp with provided credentials."
        }
    }
    catch {
        Write-Host "Error accessing NFS shares on $targetIp with provided credentials: $_"
        Add-Content -Path $outputFilePath -Value "Error accessing NFS shares on $targetIp with provided credentials: $_"
    }
}

# Function to check for anonymous NFS shares on a given target IP
function CheckAnonymousNfsShares($targetIp) {
    try {
        # Attempt to access NFS shares without credentials
        $anonymousNfsShares = Get-WmiObject -Class Win32_NetworkConnection -Filter "RemoteName='\\\\$targetIp\\' AND ProviderType=8192" -ErrorAction Stop

        if ($anonymousNfsShares) {
            Write-Host "Anonymous NFS shares on {$targetIp}:"
            foreach ($share in $anonymousNfsShares) {
                Write-Host "   - $($share.LocalName)"
                Add-Content -Path $outputFilePath -Value "{$targetIp}: $($share.LocalName) (anonymous)"
            }
        }
        else {
            Write-Host "No anonymous NFS shares found on $targetIp."
            Add-Content -Path $outputFilePath -Value "No anonymous NFS shares found on $targetIp."
        }
    }
    catch {
        Write-Host "Error accessing anonymous NFS shares on {$targetIp}: $_"
        Add-Content -Path $outputFilePath -Value "Error accessing anonymous NFS shares on {$targetIp}: $_"
    }
}

# Read target IPs from the input file
$targetIps = Get-Content -Path $inputFilePath

# Provide credentials for accessing NFS shares
$nfsUsername = Read-Host -Prompt "Enter NFS username"
$nfsPassword = Read-Host -Prompt "Enter NFS password" -AsSecureString

# Loop through each target IP and check for NFS shares
foreach ($ip in $targetIps) {
    Write-Host "Checking NFS shares on $ip..."

    # Check with provided credentials
    CheckNfsShares -targetIp $ip -username $nfsUsername -password $nfsPassword

    # Check for anonymous shares if no credentials provided
    if (-not $nfsUsername -or -not $nfsPassword) {
        CheckAnonymousNfsShares -targetIp $ip
    }

    Write-Host ""
}

Write-Host "NFS shares check complete. Results saved to $outputFilePath."